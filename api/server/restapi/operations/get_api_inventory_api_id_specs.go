// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAPIInventoryAPIIDSpecsHandlerFunc turns a function with the right signature into a get API inventory API ID specs handler
type GetAPIInventoryAPIIDSpecsHandlerFunc func(GetAPIInventoryAPIIDSpecsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIInventoryAPIIDSpecsHandlerFunc) Handle(params GetAPIInventoryAPIIDSpecsParams) middleware.Responder {
	return fn(params)
}

// GetAPIInventoryAPIIDSpecsHandler interface for that can handle valid get API inventory API ID specs params
type GetAPIInventoryAPIIDSpecsHandler interface {
	Handle(GetAPIInventoryAPIIDSpecsParams) middleware.Responder
}

// NewGetAPIInventoryAPIIDSpecs creates a new http.Handler for the get API inventory API ID specs operation
func NewGetAPIInventoryAPIIDSpecs(ctx *middleware.Context, handler GetAPIInventoryAPIIDSpecsHandler) *GetAPIInventoryAPIIDSpecs {
	return &GetAPIInventoryAPIIDSpecs{Context: ctx, Handler: handler}
}

/* GetAPIInventoryAPIIDSpecs swagger:route GET /apiInventory/{apiId}/specs getApiInventoryApiIdSpecs

Get provided and reconstructed open api specs for a specific API

*/
type GetAPIInventoryAPIIDSpecs struct {
	Context *middleware.Context
	Handler GetAPIInventoryAPIIDSpecsHandler
}

func (o *GetAPIInventoryAPIIDSpecs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAPIInventoryAPIIDSpecsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
